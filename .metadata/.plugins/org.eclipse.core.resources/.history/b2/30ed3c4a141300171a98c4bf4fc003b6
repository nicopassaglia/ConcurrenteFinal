package Monitor;

import java.util.concurrent.Semaphore;

import Extra.Matriz;
import Instrumentos.Instrumento;

public class GestorDeMonitor {

	public Colas colas;
	public Semaphore mutex;
	public Politicas politicas;
	public RDP rdp;



	public GestorDeMonitor(Colas colas, Politicas politicas, RDP rdp){

		this.mutex = new Semaphore(1,true);
		this.colas = colas;
		this.politicas = politicas;
		this.rdp = rdp;
	}

	public void Disparar(int transicion, Instrumento proceso){
		boolean k;
		Matriz sensi;
		Matriz quienes;
		Matriz and;
		int cual;

		try {
			mutex.acquire();
			while(k){


				k=true;
				k = rdp.disparar(transicion);
				if(k){
					sensi=rdp.sensibilizadas();
					quienes = colas.quienesEstan();
					and = sensi.AND(quienes);
					cual = politicas.cual(and);

					if(cual != -1){
						colas.release(cual);

					}

				}
				else{

				}
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}




}
